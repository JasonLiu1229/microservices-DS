name: microservices-ds

services:
  backend:
    container_name: microservices-backend
    hostname: backend
    build: 
      context: ./src/backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "127.0.0.1:8000:8000"
    networks:
      - host
    depends_on:
      db:
        condition: service_healthy
      frontend:
        condition: service_completed_successfully
        required: false

  frontend:
    container_name: microservices-frontend
    hostname: frontend
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    command: ["bash", "-c", "npm install && npm run dev"]
    volumes:
      - ./src/frontend:/src/frontend
    ports:
      - "127.0.0.1:8080:8080"
    stop_signal: SIGKILL
    networks:
      - host

  db:
    container_name: microservices-db
    hostname: db  
    build:
        context: ./src/db
        dockerfile: Dockerfile
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: "pg_isready -U '${APP_DB_USER}' -d '${APP_DB_NAME}' || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - host
    volumes:
      - ./config/db/postgresql.conf:/etc/postgresql/postgresql.conf
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${APP_DB_USER}
      - POSTGRES_PASSWORD=${APP_DB_PASSWORD}
      - POSTGRES_DB=${APP_DB_NAME}

networks:
  host: {}
  
volumes:
  db-data: {}
